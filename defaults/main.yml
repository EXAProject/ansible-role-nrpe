---
# defaults file for ansible-role-nrpe
# ##  User changing on EL7 derivatives
# if nrpe_user and group are changed to for example "nagios"
# you should ensure that systemd launches nrpe as these
# as well as ownership of the /var/run directory
# The nrpe systemd cannot handle this without modifications to
# /usr/lib/systemd/system/nrpe.service
#
nrpe_user_creation: False
nrpe_user: "nagios"
nrpe_group: "nagios"
nagios_uid: "5900"
nagios_gid: "900"

# Set this to true to set Defaults:nrpe_user !requiretty in sudoers
nrpe_disable_sudo_requiretty: False

########

# One true at a time please
install_opsview: False
install_nrpe: True

opsview_cfg_file: "/usr/local/nagios/etc/nrpe_local/override.cfg"
#nagios_cfg_file: "/etc/nrpe.d/override.cfg"
nagios_cfg_file: "/etc/nagios/nrpe.cfg"
nagios_allowed_hosts: "127.0.0.1,10.1.1.1,10.2.2.2"

# Remove all command[*] entries from the default nrpe.cfg file.
# The "command" settings in the default file take precedence over settings in
# an nrpe.d directory and can sometimes interfere with how the user actually
# wants to configure checks.
remove_hardcoded_checks: false

# If nagios_dont_blame is True we allow command arguments
# Before version 1.3.0 of ansible-role-nrpe setting nagios_dont_blame to True prevented command argments.
nagios_dont_blame: False
nagios_default_argument: "{{ nagios_dont_blame | ternary( '$ARG1$', '' ) }}"

nagios_allow_command_sub: False

nagios_debug: False
nagios_command_timeout: 60
nagios_connection_timeout: 300

#nagios_extra_settings_list:
# - include_dir={{ nagios_include_dir }}

opsview_include_dir: "/usr/local/nagios/etc/nrpe_local/"
nagios_include_dir: "/etc/nagios/nrpe.d/"

opsview_libexec_dir: "/usr/local/nagios/libexec"
nagios_plugins_dir: "/usr/lib64/nagios/plugins"

nagios_custom_checks_file: "check.cfg"

nagios_plugins:
 - { command: "check_disk", path: "{{ nagios_plugins_dir }}/check_disk", arguments: "$ARG1$" }
 - { command: "check_ntp_time", path: "{{ nagios_plugins_dir }}/check_ntp_time", arguments: "$ARG1$" }
 - { command: "check_load", path: "{{ nagios_plugins_dir }}/check_load", arguments: "$ARG1$" }
 - { command: "check_swap", path: "{{ nagios_plugins_dir }}/check_swap", arguments: "$ARG1$" }
 - { command: "check_procs", path: "{{ nagios_plugins_dir }}/check_procs", arguments: "$ARG1$" }
opsview_plugins:
 - { command: "check_users", path: "{{ opsview_libexec_dir }}/check_users", arguments: "$ARG1$" }
 - { command: "check_load", path: "{{ opsview_libexec_dir }}/check_load", arguments: "$ARG1$" }
 - { command: "check_disk", path: "{{ opsview_libexec_dir }}/check_disk", arguments: "$ARG1$" }
 - { command: "check_swap", path: "{{ opsview_libexec_dir }}/check_swap", arguments: "$ARG1$" }
 - { command: "check_procs", path: "{{ opsview_libexec_dir }}/check_procs", arguments: "$ARG1$" }
 - { command: "check_memory", path: "{{ opsview_libexec_dir }}/check_memory", arguments: "$ARG1$" }
 - { command: "check_file_age", path: "{{ opsview_libexec_dir }}/check_file_age", arguments: "$ARG1$" }

nrpe_extra_rpms:
 - nagios-common
 - nagios-plugins-disk
 - nagios-plugins-dns
 - nagios-plugins-file_age
 - nagios-plugins-http
 - nagios-plugins-icmp
 - nagios-plugins-load
 - nagios-plugins-ldap
 - nagios-plugins-nrpe
 - nagios-plugins-ntp
 - nagios-plugins-ping
 - nagios-plugins-procs
 - nagios-plugins-snmp
 - nagios-plugins-ssh
 - nagios-plugins-swap
 - nagios-plugins-tcp
 - nagios-plugins-time

#Â Download git repos with additional check
# One can use the commands list to easily add speicifc scripts from specific repos
# additional_nrpe_checks:
#   - src: "https://github.com/CSCfi/puppet-opsviewagent.git"
#     dest: "{{ nagios_plugins_dir }}/puppet_opsviewagent"
#     version: "6fd3aae095a5d8691e8636214ff7d48c80c3ff67"
#     script_path: "{{ nagios_plugins_dir }}/puppet_opsviewagent/files/nrpe/"
#     type: 'git' # Possibility to add other sources in the future
#     commands:
#       - scripts_name: check_linux_memory
#         command: check_linux_memory
#         arguments: '-f -w 10 -c 5'
#       - script_name: check_cpu
#   - script_path: "{{ nagios_plugins_dir }}"
#     type: 'local'
#     commands:
#       - { command: 'check_procs' }
